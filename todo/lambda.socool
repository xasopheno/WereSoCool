main = {
  Seq [
    Fm 1, Fm 9/8, Fm 5/4
  ]
  | Overlay [
    AsIs, 
    Reverse,
    Fm 5/4,
    Lm 2,
    / input {
      Seq [Fm 1, Fm 3/4, Fm 1] | FitLength input
      / inner_input {
        Seq [Fm 1, Fm 3/4, Fm 1] | FitLength input,
        Seq [Fm 1, Fm 3/4, Fm 1] | FitLength inner_input
      }
    }
  ]
}

struct Scope {
  &parent 
  map
}

global allThings : Scope[] = []
type Scope: {map: HashMap, name: string}

Defs: [&localScope2, &localScope1, &globalScope]
Defs(names, g)
