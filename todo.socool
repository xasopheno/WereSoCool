{ f: 310, l: 1, g: 1, p: 0 }

[x] list = { 
    List [Tm 1, Tm 2]
}

[x] named_list = { 
    melody
}

[x] indexed_list = { 
    List [Tm 1, Tm 2] @ [0, 1, 0]
}

[x] indexed_named_list = { 
    list_def @ [0, 1, 0]
}

[x] op_composed_with_list = { 
    Tm 9/8 | melody
}

[x] indexed_named_list = { 
    list_def @ [0, 1, 0]
}

[x] list_fit_length = { 
    List [Tm 1, Tm 9/8] @ [0, 1, 0] > FitLength other_list
    List [Tm 1, Tm 9/8] > FitLength other_list
    list > FitLength other_list
}

[x] et = { 
    ET(12)
    ET(12) @ [0, 5, 11, 23, -4, -10, 3]
}

[x] random = {
    ET(12) @ [Random(9, 0)]
}

[x] index_with_op = { 
    List [Tm 1, Tm 2] @ [0, 1 | Length 1/2, 0]
}

index_out_of_bounds = { 
    ET(12) @ [-4, 2, 15]
    ET(12) @ [RandRange(-10, 20, 0)] > Transpose
}

as_overlay = { 
    ET(12) %
    ET(12) % [-4, 2, 15] 
}

weighted_random = { 
    List [Tm 1, Tm 2] @ [
        WeightedRandom([(0, 2), (1, 3)], 5)
    ]
}

combine_lists = { 
    List [Tm 1, Tm 2] + List[Tm 3, Tm 4] @ [Random(4)] 
    my_list + List[Tm 3, Tm 4, Tm 0, Tm 0, Tm 0] @ [Random(4)] 
}


random_with_ops = {
    ET(12) @ [Random(9, 0) < [Gain 1, Gain 1/2, Tm 1/3]]
}


limit = {
    Limit(5)[1, 2, 3, 4]
}

indexed_transposed_list = { 
    ET(12) @ [0, /11, /10, /7, /4, 5, 3, 2, /11, 7, \2]
}

listop ::= [ term.. ] 
            | [ term.. ] @ [ index.. ] 
            | named @ [ index.. ] 
            | ET(n) 
            | ET(n) @ [ index ...]

listop ::= list
            | ET(n)
            | name @ [ index.. ]
            | listop @ [ index.. ]

list_op => list_nf

indices ::= [[index]..] => [Term]

index ::= const(n) => [term]
            | random(i64, Option<i64>) => [term .. ]
            | index | term => [term ..] | term => [term]


