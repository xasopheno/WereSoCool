struct RealTimeRender {
    pub buffer_1: StereoWaveform,
    write_idx: usize,
    read_idx: usize,
}

struct RealTimeRender {
    pub buffer_1: StereoWaveform,
    read_idx: usize,
}

struct Renders {
    RenderVoices: RenderVoices,
    render: RealTimeRender,
}

new: AtomicBool::new(false)
buffers: (Arc<Mutex<RealTimeRender>>, Arc<Mutex<RealTimeRender>>)
voices: (Arc<Mutex<RenderVoices>>, Arc<Mutex<RenderVoices>>)
index: AtomicUsize

let mut index = AtomicUsize::new(0);
let idx_locked = *index.get_mut();
idx_locked = idx_locked + 1 % 2;
assert_eq!(index.load(Ordering::SeqCst), 1);

Need a Renderer!!!

struct Renderer {
    new: bool 
    voices: (Vec<Arc<RenderVoices>>, Vec<Arc<Mutex<RenderVoices>>)
    buffers: (Arc<Mutex<RealTimeRender>>, Arc<Mutex<RealTimeRender>>)
    index: usize
}

1 ~~> | Fade | 2 ~~>
